{"version":3,"sources":["App.tsx","components/Visiblegoods.tsx","index.tsx"],"names":["SortType","VisibleGoods","goods","map","good","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSort","visibleGoods","sort","food1","food2","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isResetButtonVisible","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAAgC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC9C,OACE,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,SDLFC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAqCE,IAAMM,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAASP,EAASU,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KAOMC,EAnCD,SACLX,EADK,GAGJ,IADCS,EACF,EADEA,SAAUH,EACZ,EADYA,WAENK,EAAY,YAAOX,GAmBzB,OAjBAW,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKX,EAASiB,QACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITZ,GACFK,EAAaQ,UAGRR,EAYcS,CACnBjB,EACA,CAAEM,WAAUH,eAGRe,EAAuBZ,IAAaX,EAASU,MAAQF,EAE3D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYf,IAAaX,EAASiB,UAEtCU,QAAS,kBAAMf,EAAQZ,EAASiB,UANlC,iCAYA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYf,IAAaX,EAASmB,SAEtCQ,QAAS,kBAAMf,EAAQZ,EAASmB,SANlC,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAalB,IAEjBmB,QAAS,kBAAMlB,GAAeD,IANhC,qBAWEe,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,kBApDjBf,EAAQZ,EAASU,WACjBD,GAAc,IAgDR,sBAWJ,6BACE,cAAC,EAAD,CAAcP,MAAOW,UEvH7Be,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b62907f5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { VisibleGoods } from './components/Visiblegoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((food1, food2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return food1.localeCompare(food2);\n\n      case SortType.LENGTH:\n        return food1.length - food2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSort] = useState(SortType.NONE);\n\n  const handleSort = () => {\n    setSort(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  const isResetButtonVisible = sortType !== SortType.NONE || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPABET },\n          )}\n          onClick={() => setSort(SortType.ALPABET)}\n\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSort(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        { isResetButtonVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => handleSort()}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <VisibleGoods goods={visibleGoods} />\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\n\n type Props = {\n   goods: string[];\n };\n\nexport const VisibleGoods: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map((good) => (\n        <li\n          key={good}\n          data-cy=\"Good\"\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}