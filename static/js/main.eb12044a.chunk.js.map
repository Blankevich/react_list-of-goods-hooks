{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReversed","NONE","sortType","setSort","visibleGoods","goods","sort","food1","food2","ALPABET","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","reset","className","type","classNames","onClick","map","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,4EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAASH,EAASM,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAlCD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAGNK,EAAY,YAAOC,GAsBzB,OApBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQN,GACN,KAAKP,EAASc,QACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITb,GACFK,EAAaS,UAIfC,QAAQC,IAAIb,EAAUH,GAEfK,EAOcY,CACnBpB,EACA,CAAEM,WAAUH,eAGRkB,EAAQf,IAAaP,EAASM,MAAQF,EAE5C,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAaP,EAASc,UAEtCY,QAAS,kBAAMlB,EAAQR,EAASc,UANlC,iCAWA,wBACEU,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYlB,IAAaP,EAASgB,SAEtCU,QAAS,kBAAMlB,EAAQR,EAASgB,SANlC,4BAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAAS,kBAAMrB,GAAaD,IAN9B,qBAWEkB,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPlB,EAAQR,EAASM,MACjBD,GAAY,IALhB,sBAcJ,6BACE,6BACGI,EAAakB,KAAI,SAAAjB,GAAK,OACrB,6BACGA,GADMA,cC1HrBkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eb12044a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((food1, food2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return food1.localeCompare(food2);\n\n      case SortType.LENGTH:\n        return food1.length - food2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSort] = useState(SortType.NONE);\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  const reset = sortType !== SortType.NONE || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPABET },\n          )}\n          onClick={() => setSort(SortType.ALPABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSort(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        { reset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSort(SortType.NONE);\n              setReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(goods => (\n            <li key={goods}>\n              {goods}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}